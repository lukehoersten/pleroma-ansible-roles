import Config

config :pleroma, Pleroma.Web.Endpoint,
  url: [host: "{{pleroma_link_host}}", scheme: "{{pleroma_link_scheme}}", port: {{pleroma_link_port}}],
  http: [port: {{pleroma_port}}, ip: {0, 0, 0, 0}],
  secret_key_base: "{{pleroma_secret_key}}",
  secure_cookie_flag: true

config :pleroma, :http_security,
  enabled: true,
  sts: true,
  referrer_policy: "same-origin"

config :pleroma, :instance,
  name: "{{pleroma_instance_name}}",
  description: "{{pleroma_desc}}",
  email: "{{pleroma_admin_email}}",
  limit: {{pleroma_char_limit}},
  registrations_open: {{pleroma_signup_open}},
  invites_enabled: {{pleroma_invites_enabled}},
  static_dir: "{{pleroma_data_dir}}/{{pleroma_instance}}/static/"

config :pleroma, Pleroma.Upload,
  uploader: Pleroma.Uploaders.Local,
  filters: [Pleroma.Upload.Filter.Dedupe]

config :pleroma, Pleroma.Uploaders.Local,
  uploads: "{{pleroma_data_dir}}/{{pleroma_instance}}/uploads/"

config :pleroma, :media_proxy,
  enabled: true,
  redirect_on_failure: true

config :pleroma, Pleroma.Repo,
  adapter: Ecto.Adapters.Postgres,
  username: "{{pleroma_db_user}}",
  password: "{{pleroma_db_passwd}}",
  database: "{{pleroma_db}}",
  hostname: "{{pleroma_db_host}}",
  pool_size: 10,
  timeout: 60000

config :prometheus, Pleroma.Web.Endpoint.MetricsExporter,
  enabled: true
#   ip_whitelist: ["127.0.0.1"],
#   path: "/api/pleroma/app_metrics",
#   format: :text

config :logger,
  backends: [{ExSyslogger, :ex_syslogger}]

config :logger, :ex_syslogger,
  level: :warn
